<script>
    import { enhance } from "$app/forms";
    import { onMount } from "svelte";
    import { toast } from "svelte-sonner";

    let lat;
    let long;
    let message;
    let radius = 100;

    async function getUserLocation() {
        if (lat && long) {
            return { latitude: lat, longitude: long }; // Return cached values
        }

        if (!navigator.geolocation) {
            throw new Error("Geolocation is not supported by your browser");
        }

        try {
            const position = await new Promise((resolve, reject) => {
                navigator.geolocation.getCurrentPosition(resolve, reject, {
                    maximumAge: 10 * 1000,
                    enableHighAccuracy: true,
                });
            });

            lat = position.coords.latitude;
            long = position.coords.longitude;

            return { latitude: lat, longitude: long };
        } catch (error) {
            throw error; // Re-throw error for proper handling
        }
    }

    async function displayMessages(messages, radius, userLocation) {
        // Implement the displayMessages function
    }

    async function fetchMenages(event) {
        event.preventDefault(); // Prevent default form submission

        // const radius = document.getElementById('radius').value;

        // if (!radius) {
        //     alert('Please enter a radius.');
        //     return;
        // }

        // try {
        //     document.getElementById('loader').classList.remove('hidden');
        //     document.getElementById('buttonText').classList.add('hidden');

        //     const userLocation = await getUserLocation();
        //     const messages = await getMessages(userLocation, parseInt(radius));
        //     await displayMessages(messages, parseInt(radius), userLocation);

        //     document.getElementById('loader').classList.add('hidden');
        //     document.getElementById('buttonText').classList.remove('hidden');
        // } catch (error) {
        //     console.error('Error:', error);
        //     alert('An error occurred. Please try again later.');
        // }

        const response = await fetch(
            `/api/getMessagesNearbyLocation?radius=${radius}&lat=${lat}&long=${long}`,
        );
        const data = await response.json();
        console.log(data);
    }

    const messageFormSubmitAction = ({ formData }) => {
        let toastId = toast.loading("Posting your message...")

        formData.append("long", long);
        formData.append("lat", lat);
        return async ({ result, update }) => {
            toast.dismiss(toastId)
            if (result.status === 200) {
                toast.success("Message posted on location");
                await update();
                message = undefined;
            } else {
                toast.error("Error adding message on location");
            }
        };
    };

    onMount(getUserLocation);
</script>

<main class="container mx-auto px-4 py-8" id="main">
    <!-- Message Form and Search Form -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <!-- Message Form -->
        <div class="bg-white rounded-lg shadow-md p-6 text-black">
            {#if lat && long}
                <div
                    class="bg-white rounded-lg py-3 mr-10 flex justify-between"
                >
                    <div>
                        Latitude: {lat}
                    </div>
                    <div>
                        Longitude: {long}
                    </div>
                </div>
            {/if}

            <div id="user-location"></div>
            <div
                class="flex items-center justify-between mb-4 bg-green-100 p-3 hidden"
                id="success"
            >
                <span class="text-lg font-medium text-gray-800"
                    >Message Saved Successfully!</span
                >
            </div>
            <form
                method="POST"
                action="?/addMessageOnLocation"
                id="message-form"
                class="space-y-4"
                use:enhance={messageFormSubmitAction}
            >
                <label
                    for="message"
                    class="block text-sm font-medium text-gray-700"
                    >Add a note at this location:</label
                >
                <textarea
                    id="message"
                    name="message"
                    rows="5"
                    class="w-full rounded-md border border-gray-300 p-2"
                    required
                    bind:value={message}
                ></textarea>
                <button
                    type="submit"
                    class="relative inline-flex items-center px-2 py-2 border border-blue-500 text-blue-500 rounded-md hover:bg-blue-500 hover:text-white transition duration-300 ease-in-out text-sm md:text-base"
                >
                    Add Note
                </button>
            </form>
        </div>

        <div class="bg-white rounded-lg shadow-md p-6">
            <form class="space-y-4">
              <label for="message" class="block text-lg font-semibold text-gray-700">Add a note at this location:</label>
              <textarea id="message" name="message" rows="5" class="w-full rounded-md border border-gray-300 p-2 focus:outline-none focus:ring-2 focus:ring-indigo-500" required bind:value={message}></textarea>
              <button type="submit" class="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors duration-300">Post Note</button>
            </form>
          </div>

        <!-- Search Form -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <div class="bg-white rounded-lg">
                <label
                    for="radius"
                    class="block text-sm font-medium text-gray-700 mb-3"
                    >Search Radius (<span id="radiusValue" class="text-gray-600"
                        >1000m</span
                    >):</label
                >
                <input
                    type="range"
                    id="radius"
                    name="radius"
                    min="100"
                    max="5000"
                    class="w-full appearance-none bg-gray-200 h-2 rounded-full outline-none"
                    bind:value={radius}
                />
                <div class="flex justify-between mt-2">
                    <span class="text-gray-600">100m</span>
                    <span class="text-gray-600">5000m</span>
                </div>
            </div>
            <button
                type="submit"
                id="searchButton"
                class="relative inline-flex items-center px-2 py-2 border border-blue-500 text-blue-500 rounded-md hover:bg-blue-500 hover:text-white transition duration-300 ease-in-out text-sm md:text-base"
                on:click={fetchMenages}
            >
                <span id="buttonText">Search Messages</span>
                <span
                    id="loader"
                    class="w-5 h-5 hidden border-t-2 border-b-2 border-blue-500 rounded-full animate-spin"
                ></span>
            </button>
        </div>
    </div>

    <!-- Messages Container -->
    <div
        class="bg-white rounded-lg shadow-md p-6 mt-8 hidden"
        id="messages-container"
    ></div>
</main>
